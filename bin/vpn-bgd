#!/bin/sh

help()
{
  echo "Usage:"
  echo "$0 # Start jumpbox and connect to VPN"
  echo "$0 SERVICE_NAME # Create tunnel to service named SERVICE_NAME"
  echo "$0 REMOTE_IP:REMOTE_PORT LOCAL_PORT # Create tunnel to REMOTE_IP:REMOTE_PORT on LOCAL_PORT"
  echo "Available services: rancher"
}

if [ -z "$1" ]; then
  docker run --rm -it --name jb-bgd --privileged -p 2222:22 -e SSH_AUTH_KEY="$(cat ~/.ssh/id_rsa.pub)" pntregistry.azurecr.io/bergendahls-jumpbox
else
  case "$1" in
    "rancher") remote="172.22.51.20:8080"; port=${2:-8080} ;;
    "rancher-test") remote="172.22.51.20:443"; port=${2:-55443} ;;
    "rabbitmq-man") remote="10.209.12.148:15672"; port=${2:-15672} ;;
    "rabbitmq") remote="10.209.12.148:5672"; port=${2:-5672} ;;
    "elastic") remote="10.209.12.148:9500"; port=${2:-9200} ;;
    *) remote="$1"; port="$2" ;;
  esac

  if (echo "$port" | grep -Evq '^[0-9]{4,5}$'); then
    echo "Invalid port: $port"
    help
    exit 1
  fi

  if (echo "$remote" | grep -Evq '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[0-9]{2,5}$'); then
    echo "Invalid remote spec: $remote"
    help
    exit 1
  fi

  echo "Mapping $remote to $port"
  ssh -o "UserKnownHostsFile /dev/null" -o "StrictHostKeyChecking no" -nNT -L "$port:$remote" root@localhost -p 2222
fi
